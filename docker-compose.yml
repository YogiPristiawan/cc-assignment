services:
  db:
    image: postgres:15.6-bullseye
    container_name: db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME:?err}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?err}
      POSTGRES_DB: ${DB_DATABASE:?err}
    healthcheck:
      test: "pg_isready -U ${DB_USERNAME:?err} -d ${DB_DATABASE:?err}"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backend:
    image: backend
    container_name: backend
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/:/var/www
    env_file:
      - .env
    networks:
      - app_network

  backend-nginx:
    image: nginx:alpine
    container_name: backend-nginx
    restart: on-failure
    volumes:
      - ./backend/:/var/www
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    ports:
      - 8000:80
    networks:
      - app_network

  frontend:
    image: frontend
    container_name: frontend
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:?err}
    depends_on:
      - backend-nginx
    env_file:
      - .env
    ports:
      - 5173:80
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
